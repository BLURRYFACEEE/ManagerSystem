{"remainingRequest":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\mock\\index.js","dependencies":[{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\mock\\index.js","mtime":1554111457000},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/81981/Desktop/vue-element-admin-4.0.0/ManagerSystem/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mockXHR = mockXHR;\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"C:/Users/81981/Desktop/vue-element-admin-4.0.0/ManagerSystem/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\"));\n\nvar _mockjs = _interopRequireDefault(require(\"mockjs\"));\n\nvar _mocks = _interopRequireDefault(require(\"./mocks\"));\n\nvar _utils = require(\"../src/utils\");\n\nvar MOCK_API_BASE = '/mock';\n\nfunction mockXHR() {\n  // 修复在使用 MockJS 情况下，设置 withCredentials = true，且未被拦截的跨域请求丢失 Cookies 的问题\n  // https://github.com/nuysoft/Mock/issues/300\n  _mockjs.default.XHR.prototype.proxy_send = _mockjs.default.XHR.prototype.send;\n\n  _mockjs.default.XHR.prototype.send = function () {\n    if (this.custom.xhr) {\n      this.custom.xhr.withCredentials = this.withCredentials || false;\n\n      if (this.responseType) {\n        this.custom.xhr.responseType = this.responseType;\n      }\n    }\n\n    this.proxy_send.apply(this, arguments);\n  };\n\n  function XHR2ExpressReqWrap(respond) {\n    return function (options) {\n      var result = null;\n\n      if (respond instanceof Function) {\n        var body = options.body,\n            type = options.type,\n            url = options.url; // https://expressjs.com/en/4x/api.html#req\n\n        result = respond({\n          method: type,\n          body: JSON.parse(body),\n          query: (0, _utils.param2Obj)(url)\n        });\n      } else {\n        result = respond;\n      }\n\n      return _mockjs.default.mock(result);\n    };\n  }\n\n  var _iterator = (0, _createForOfIteratorHelper2.default)(_mocks.default),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var i = _step.value;\n\n      _mockjs.default.mock(new RegExp(i.url), i.type || 'get', XHR2ExpressReqWrap(i.response));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nvar responseFake = function responseFake(url, type, respond) {\n  return {\n    url: new RegExp(\"\".concat(MOCK_API_BASE).concat(url)),\n    type: type || 'get',\n    response: function response(req, res) {\n      res.json(_mockjs.default.mock(respond instanceof Function ? respond(req, res) : respond));\n    }\n  };\n};\n\nvar _default = _mocks.default.map(function (route) {\n  return responseFake(route.url, route.type, route.response);\n});\n\nexports.default = _default;",null]}