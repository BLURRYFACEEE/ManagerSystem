{"remainingRequest":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\src\\views\\zsgCCD1\\list\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\src\\views\\zsgCCD1\\list\\index.vue","mtime":1608977365801},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\81981\\Desktop\\vue-element-admin-4.0.0\\ManagerSystem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport eventBus from '../../../utils/eventBus.js'\r\nimport Cookies from 'js-cookie'\r\nlet id = 1000\r\nexport default {\r\n  name: 'Index',\r\n  data() {\r\n    return {\r\n      labelName: '菜单根节点',\r\n      data: [{\r\n        id: 1,\r\n        label: '菜单根节点',\r\n        children: [{\r\n          id: 2,\r\n          label: '工作台',\r\n          name: 'workTable'\r\n        }, {\r\n          id: 3,\r\n          name: 'resourceSituation',\r\n          label: '资源运行情况'\r\n        }, {\r\n          id: 4,\r\n          name: 'workPaper',\r\n          label: '工单管理'\r\n        }, {\r\n          id: 5,\r\n          name: 'resourceManage',\r\n          label: '资源管理'\r\n        }, {\r\n          id: 6,\r\n          name: 'systemmanage',\r\n          label: '系统管理'\r\n        }, {\r\n          id: 7,\r\n          name: 'smartEcharts',\r\n          label: '智能报表'\r\n        }, {\r\n          id: 8,\r\n          name: 'watchInfos',\r\n          label: '监控项信息'\r\n        }]\r\n      }],\r\n      data2: {\r\n      },\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      nowClickData: {},\r\n      update: true\r\n    }\r\n  },\r\n  mounted() {\r\n    if (Cookies.get('ha')) {\r\n      this.data = Cookies.get('ha')\r\n      console.log('listCOokies!')\r\n    }\r\n    eventBus.$on('submitCheck', (submitForm) => {\r\n      // console.log(submitForm)\r\n      const newChild = { id: id++, label: submitForm.name, children: [] }\r\n      if (!this.nowClickData.children) {\r\n        this.$set(this.nowClickData, 'children', [])\r\n      }\r\n      this.nowClickData.children.push(newChild)\r\n      // Cookies.set('ha', this.data)\r\n      // var getChange = (this.data[0].children.filter(function(item) {\r\n      //   return item.name === keyname\r\n      // }))\r\n      // console.log('getChange[0].label' + getChange[0].label)\r\n      // getChange[0].label = name\r\n      // console.log('keyname' + keyname)\r\n      // console.log(name)\r\n    })\r\n  },\r\n  methods: {\r\n    reloadComp() {\r\n      location.reload()\r\n      eventBus.$emit('reloadYourself')\r\n    },\r\n    handleDragStart(node, ev) {\r\n      console.log('drag start', node)\r\n    },\r\n    handleDragEnter(draggingNode, dropNode, ev) {\r\n      console.log('tree drag enter: ', dropNode.label)\r\n    },\r\n    handleDragLeave(draggingNode, dropNode, ev) {\r\n      console.log('tree drag leave: ', dropNode.label)\r\n    },\r\n    handleDragOver(draggingNode, dropNode, ev) {\r\n      console.log('tree drag over: ', dropNode.label)\r\n    },\r\n    handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n      console.log('tree drag end: ', dropNode && dropNode.label, dropType)\r\n    },\r\n    handleDrop(draggingNode, dropNode, dropType, ev) {\r\n      console.log('tree drop: ', dropNode.label, dropType)\r\n    },\r\n    allowDrop(draggingNode, dropNode, type) {\r\n      if (dropNode.data.label === '二级 3-1') {\r\n        return type !== 'inner'\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n    allowDrag(draggingNode) {\r\n      return draggingNode.data.label.indexOf('三级 3-2-2') === -1\r\n    },\r\n    handleNodeClick(data, data2) {\r\n      // this.labelName = data.label\r\n      this.nowClickData = data\r\n      // console.log(data)\r\n      this.changesize(data.id, data2.parent.data.label)\r\n      // console.log(data2.parent.data.label)\r\n    },\r\n    append(data) {\r\n      const newChild = { id: id++, label: 'new', children: [] }\r\n      if (!data.children) {\r\n        this.$set(data, 'children', [])\r\n      }\r\n      data.children.push(newChild)\r\n    },\r\n\r\n    remove(node, data) {\r\n      const parent = node.parent\r\n      const children = parent.data.children || parent.data\r\n      const index = children.findIndex(d => d.id === data.id)\r\n      children.splice(index, 1)\r\n    },\r\n    // renderContent(h, { node, data, store }) {\r\n    //   return (`<span class='custom-tree-node'><span>{${node}.label}</span> <span> <el-button size='mini' type='text' on-click={ () => this.append(${data}) }>Append</el-button> <el-button size='mini' type='text' on-click={ () => this.remove(${node}, ${data}) }>Delete</el-button> </span> </span>\r\n    //   `)\r\n    // },\r\n    newChild() {\r\n      // const newChild = { id: id++, label: 'new', name: 'newBorn', children: [] }\r\n      // if (!this.nowData.children) {\r\n      //   this.$set(this.nowData, 'children', [])\r\n      // }\r\n      // this.nowData.children.push(newChild)\r\n      // eventBus.$emit('newChild', newChild.name)\r\n      eventBus.$emit('addTreeDone', id)\r\n      eventBus.$emit('newChild', this.nowClickData.label)\r\n    },\r\n    changesize(id, parentName) {\r\n      eventBus.$emit('add', id, parentName)\r\n    }\r\n  }\r\n}\r\n",null]}